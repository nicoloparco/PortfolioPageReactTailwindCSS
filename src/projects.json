[{
    "id": 1,
    "name": "SportsHub - Ongoing Project",
    "description": "A sports news and discussion app that combines the best aspects of media outlets such as ESPN as well as community discussion services such as Reddit. This app provides live scores for several different sports, updated news articles, and a place for users to create and comment on sports related content.",
    "techUsed": "Tech Used: React, JavaScript, MongoDB/Mongoose, ExpressJS, NodeJS, HTML, CSS",
    "githubLink": "https://github.com/nicoloparco/bootcamp-final-project",
    "deployedLink": "https://sportshubdevteam.herokuapp.com/"
},
{
    "id": 2,
    "name": "Burger App 2 - The Sequel",
    "description": "The sequel to the Burger App. This app does all the same things as the original but uses Sequelize and its ORM model. Also features a new design.",
    "techUsed": "Tech Used: JavaScript, Sequelize, MySQL, ExpressJS, NodeJS, HTML, CSS",
    "githubLink": "https://github.com/nicoloparco/Burger-2-Sequelize",
    "deployedLink": "https://burger-2-sequelize-nl.herokuapp.com/"
},
{
    "id": 2,
    "name": "Burger App",
    "description": "A MySQL based app that allows people to add their own burgers to a database as well as 'eat' them. All entered burger data persists and is displayed through a frontend design.",
    "techUsed": "Tech Used: JavaScript, MySQL, ExpressJS, NodeJS, HTML, CSS",
    "githubLink": "https://github.com/nicoloparco/Burger-MySQL-App",
    "deployedLink": "https://burger-mysql-nl.herokuapp.com/"
},
{
    "id": 3,
    "name": "Mongoose Scraper",
    "description": "A Mongo based app that scrapes the web for news articles and displays them for the client.",
    "techUsed": "Tech Used: JavaScript, MongoDB/Mongoose, ExpressJS, NodeJs, Handlebars, HTML, CSS",
    "githubLink": "https://github.com/nicoloparco/Mongoose-Scraper",
    "image": "#"
},
{
    "id": 4,
    "name": "Crystal Collector Game",
    "description": "A JavaScript based game in which the player has to reach a certain score by clicking on crystals. Each of the 4 crystals are assigned different values each game and the score to reach is reassigned every game. Also tracks wins and losses.",
    "techUsed": "Tech Used: JavaScript, HTML, CSS",
    "githubLink":"https://github.com/nicoloparco/Crystal-Collector-Game",
    "deployedLink": "https://nicoloparco.github.io/Crystal-Collector-Game/"
},
{
    "id": 5,
    "name": "Friend Finder",
    "description": "An app in which users fill out a questionnaire to determine with other users they are most similar to. Each users' data is saved in JSON format so that whenever a new user completes the survey they will be shown their closest match.",
    "techUsed": "Tech Used: JavaScript, ExpressJS, NodeJS, HTML, CSS",
    "githubLink":"https://github.com/nicoloparco/Friend-Finder",
    "deployedLink": "https://friend-finder-gt-bootcamp.herokuapp.com/"
},
{
    "id": 6,
    "name": "CLI Shopper",
    "description": "A MySQL CLI app that simulates a user shopping experience through interaction with a data table of products. Whenever the user selects a product to 'buy' the product table is updated.",
    "techUsed": "Tech Used: JavaScript, MySQL, NodeJS",
    "githubLink": "https://github.com/nicoloparco/MySQL-App",
    "image": "#"
},
{
    "id": 7,
    "name": "LIRI Bot",
    "description": "A sports news and discussion app that combines the best aspects of media outlets such as ESPN as well as community discussion services such as Reddit. This app provides live scores for several different sports, updated news articles, and a place for users to create and comment on sports related content.A NodeJS CLI app that accesses three different API's to return data to the user. The Spotify, BandsInTown, and OMBD API's are all used to return song, artist, and movie data.",
    "techUsed": "Tech Used: JavaScript, NodeJS",
    "githubLink": "https://github.com/nicoloparco/LIRI-bot",
    "image": "#"
},
{
    "id": 8,
    "name": "Trivia Game",
    "description": "An 80's themed JavaScript based trivia game in which the user answers a series of questions each with a 30 second timer. Correct answers receive their own set of responses and images while negative responses receive a different set of responses and images.",
    "techUsed": "Tech Used: JavaScript, JQuery, HTML, CSS",
    "githubLink": "https://github.com/nicoloparco/Trivia-Game",
    "deployedLink":"https://nicoloparco.github.io/Trivia-Game/"
},
{
    "id": 9,
    "name": "GIPHY App",
    "description": "An app that accesses the GIPHY API to provide users gifs related to either a default set of buttons or dynamically generated ones through a searchbar. Default buttons include several TV shows.",
    "techUsed": "Tech Used: JavaScript, JQuery, HTML, CSS",
    "githubLink": "https://nicoloparco.github.io/GIPHY-API-App/",
    "deployedLink": "https://nicoloparco.github.io/GIPHY-API-App/"
},
{
    "id": 10,
    "name": "NFL Hangman",
    "description": "A vanilla JavaScript based app that lets the user play a game of Hangman. Each letter guessed is tracked and displayed on the page as well as the users' wins and losses. Once the user gets an answer right or runs out of guesses the word to guess resets. Word bank includes all 32 NFL teams.",
    "techUsed": "Tech Used: JavaScript, HTML, CSS, TailwindCSS",
    "githubLink": "https://github.com/nicoloparco/Word-Guess-Game",
    "deployedLink": "https://nicoloparco.github.io/Word-Guess-Game/"
}
]